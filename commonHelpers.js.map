{"version":3,"file":"commonHelpers.js","sources":["../src/js/books-api.js","../src/js/category.js","../src/js/books.js"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = 'https://books-backend.p.goit.global/';\n\nexport async function getTopBooks() {\n    const response = await axios.get('/books/top-books');\n    return response.data\n}\n\nexport async function getBooksByCategory(category) {\n    const response = await axios.get(`books/category?category=${category}`);\n    return response.data\n}\n","import axios from 'axios';\nimport Notiflix from 'notiflix'; \n\nconst BASE_URL = 'https://books-backend.p.goit.global/books/';\nconst endpointList = 'category-list';\n\nasync function fetchCategories() {\n    try {\n      const response = await axios.get(BASE_URL + endpointList);\n    \n      if (response.status === 200) {\n        console.log(response.data);\n        const categories = response.data; \n        const categoriesList = document.querySelector('.categories-list');\n\n        categories.map(category => {\n          const li = document.createElement('li');\n          li.textContent = category.list_name;\n          li.classList.add('categ-item'); \n          categoriesList.appendChild(li);\n        });\n      } else {\n        Notiflix.Notify.failure(`Request execution error. Status code: ${response.status}`);\n      }\n    } catch (error) {\n        Notiflix.Notify.failure('An error occurred while sending the request.');\n        console.error('An error occurred while sending the request:', error);\n    }\n  }\n  \n  fetchCategories();","import { getTopBooks, getBooksByCategory } from \"./books-api\";\nconst list = document.querySelector('.books')\nconst booksCategoryName = document.querySelector(\"#books-category-name\");\n\n// Завантаження даних перенесено в books-api.js\n// Ця функція буде викликана при початовому завантаженні сторінки для заповнення Top Books\nloadOnStartup();\n\nasync function loadOnStartup() {\n    // Функція оголошена, як асинхронна, так як ми маємо дочекатися завантаження даних.\n    const booksData = await getTopBooks();\n    // після одержання даних викликаємо функцію, яка генерує html розмітка\n    categoriesMarkup(booksData);\n}\n\nfunction categoriesMarkup(data) {\n    // Функція створює розмітку для одержаних категорій\n    // Далі для кожної категорії викликаємо функцію розмітки для книг (booksMarkup)\n    const markup = data.map((res) => {\n        return singleCategoryMarkup(res.list_name, res.books, false)\n    });\n    list.insertAdjacentHTML('beforeend', markup)\n}\n\nfunction singleCategoryMarkup(categoryName, books, isSingleCategory) {\n    let markup = !isSingleCategory ? `<div class = \"books-list-name\" >${categoryName}</div>` : '';\n    markup +=  `<ul class=\"books-container ${isSingleCategory ? 'books-container-multi': ''}\">\n                    ${booksMarkup(books)}\n                </ul>\n                <button class = \"books-btn\" type = \"button\" id = \"${categoryName}\"> SEE MORE </button>\n                `\n    return markup;\n}\n\nfunction booksMarkup(books) {\n    // Функція створює розмітку для списку книг\n    return books.map((book) => {\n        return `<li class = \"book-block\">\n            <img src=\"${book.book_image}\" class=\"book-pic\" width=120 heigh=240 />\n            <p class=\"book-name\">${book.title}</p>\n            <p class=\"book-author\">${book.author}</p>\n        </li>`\n    }).join('');\n}\n\n// const httpRequest = new XMLHttpRequest();\n\n// function newList() {\n    \n    \n//     return `<div class = \"books-list-name\" ></div>\n//     <ul class=\"books-container\">\n//     </ul>`\n// }\n\n// Наступний код треба видалити:\n// 1. Він виконується тільки раз при завантаженні сторінки\n// 2. У нас на даний момент немає виділеної категорії, яку треба завантажити\n// 3. Ми використовуємо бібліотеку axios для http запитів\n/*\nhttpRequest.onreadystatechange = newList;\nhttpRequest.open(\"GET\", \"https://books-backend.p.goit.global/books/category?category=selectedCategory\", true);\nhttpRequest.setRequestHeader(\n    \"Content-Type\",\n    \"application/json\",\n  );\nhttpRequest.send();\n*/\n\n// Так само, категорії ще не завантажені на цей час.\n// Краще підписатися на клік батьківсьго елементу.\n/*\nconst categoryItems = document.querySelectorAll('.categ-item');\ncategoryItems.forEach(function(category) {\n    category.addEventListener(\"click\", function() {\n        const selectedCategory = categoryItems.value;\n        const url = \"https://books-backend.p.goit.global/books/category?category=\" + selectedCategory;\n        axios.get(url)\n            .then(response => {\n                console.log(response.data);\n            })\n            .catch(error => console.error(error));\n\n    })\n})*/\nconst categoryList = document.querySelector('.categories-list');\n\n// Обробник кліку на категорії - завантажуємо книги для категорії і виділяємо акитивну категорію\ncategoryList.addEventListener(\"click\", async (e) => { \n    e.preventDefault();\n    \n    if (e.target == categoryList) {\n        // Натиснули на список, а не на елемент (між елементами), ігноруємо\n        return;\n    }\n    const selectedCategory = e.target.innerHTML;\n    for (const child of e.currentTarget.children) {\n        console.log(child.classList.remove('is-active-item'));\n    }\n    e.target.classList.add('is-active-item');\n    \n    let markup = null\n    if (selectedCategory == \"All categories\") {\n        populateCategoryHeader('Best Sellers Books');\n        const data = await getTopBooks(); \n        markup = categoriesMarkup(selectedCategory, data, false);\n    }\n    else {\n        populateCategoryHeader(selectedCategory);\n        const data = await getBooksByCategory(selectedCategory);  \n        markup = singleCategoryMarkup(selectedCategory, data, true);\n    }\n    list.innerHTML = markup;\n})\n\nfunction populateCategoryHeader(categoryName) {\n    // Update categories header (h1) with selected category name\n    const words = categoryName.split(\" \")\n    booksCategoryName.innerHTML = `<span class=\"dark-text\">${words[0]}</span> ${words.slice(1).join(' ')}`;\n}\n\n\nconst buttonsForCateg = document.querySelectorAll(\".books-btn\");\n\nbuttonsForCateg.forEach(function(button) {\n    button.addEventListener(\"click\", function() {\n        const showList = categoryItems.map(url)\n    list.insertAdjacentHTML(\"beforeend\", showList)\n    console.log(list)\n    });\n});\n\n// categoryItems.addEventListener(\"click\", function() { \n//     const selectedCategory = categoryItems.value;\n//     const url = \"https://books-backend.p.goit.global/books/category?category=\" + selectedCategory;\n//     axios.get(url)\n//         .then(response) })\n"],"names":["axios","getTopBooks","getBooksByCategory","category","BASE_URL","endpointList","fetchCategories","response","categories","categoriesList","li","Notiflix","error","list","booksCategoryName","loadOnStartup","booksData","categoriesMarkup","data","markup","res","singleCategoryMarkup","categoryName","books","isSingleCategory","booksMarkup","book","categoryList","e","selectedCategory","child","populateCategoryHeader","words","buttonsForCateg","button","showList"],"mappings":"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"}