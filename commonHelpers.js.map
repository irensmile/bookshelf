{"version":3,"file":"commonHelpers.js","sources":["../src/js/books-api.js","../src/js/authorisation.js","../src/js/category.js","../src/js/books.js"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = 'https://books-backend.p.goit.global/';\n\nexport async function getTopBooks() {\n    const response = await axios.get('/books/top-books');\n    return response.data\n}\n\nexport async function getBooksByCategory(category) {\n    const response = await axios.get(`books/category?category=${category}`);\n    return response.data\n}\n","document.addEventListener('DOMContentLoaded', function () {\n  const authModal = document.getElementById('authModal');\n  const openModalBtn = document.getElementById('sign-in-button-main');\n  const authFormClose = document.querySelector('.auth-form-close');\n  const signupLink = document.getElementById('signup-link');\n  const signinLink = document.getElementById('signin-link');\n  const signupForm = document.getElementById('signup-form');\n  const signinForm = document.getElementById('signin-form');\n  const submitButton = document.querySelector('.btn-sign-up');\n\n  openModalBtn.addEventListener('click', function () {\n    openAuthModal(authModal);\n  });\n\n  authFormClose.addEventListener('click', function () {\n    authModal.style.display = 'none';\n  });\n\n  signupLink.addEventListener('click', function (event) {\n    event.preventDefault();\n    updateButtonText('Sign up');\n    \n  });\n\n  signinLink.addEventListener('click', function (event) {\n    event.preventDefault();\n    updateButtonText('Sign in');\n    \n  });\n\n  signupForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n\n    const userData = {\n      name,\n      email,\n      password,\n    };\n\n    saveUserData(userData);\n\n    authModal.style.display = 'none';\n\n    this.reset();\n  });\n\n  function openAuthModal(modal) {\n    modal.style.display = 'block';\n  }\n\n  function saveUserData(userData) {\n    const existingUsers = JSON.parse(localStorage.getItem('users')) || [];\n    existingUsers.push(userData);\n    localStorage.setItem('users', JSON.stringify(existingUsers));\n  }\n\n  function updateButtonText(action) {\n    if (submitButton) {\n      submitButton.textContent = action;\n    }\n  }\n});\n","import axios from 'axios';\nimport Notiflix from 'notiflix'; \n\nconst BASE_URL = 'https://books-backend.p.goit.global/books/';\nconst endpointList = 'category-list';\n\nasync function fetchCategories() {\n    try {\n      const response = await axios.get(BASE_URL + endpointList);\n    \n      if (response.status === 200) {\n        const categories = response.data; \n        const categoriesList = document.querySelector('.categories-list');\n\n        categories.map(category => {\n          const li = document.createElement('li');\n          li.textContent = category.list_name;\n          li.classList.add('categ-item'); \n          categoriesList.appendChild(li);\n        });\n      } else {\n        Notiflix.Notify.failure(`Request execution error. Status code: ${response.status}`);\n      }\n    } catch (error) {\n        Notiflix.Notify.failure('An error occurred while sending the request.');\n        console.error('An error occurred while sending the request:', error);\n    }\n  }\n  \n  fetchCategories();","import { getTopBooks, getBooksByCategory } from \"./books-api\";\nconst list = document.querySelector('.books')\nconst categoryList = document.querySelector('.categories-list');\nconst booksCategoryName = document.querySelector(\"#books-category-name\");\n\n// Завантаження даних перенесено в books-api.js\n// Ця функція буде викликана при початовому завантаженні сторінки для заповнення Top Books\nloadOnStartup();\n\nasync function loadOnStartup() {\n    // Функція оголошена, як асинхронна, так як ми маємо дочекатися завантаження даних.\n    const booksData = await getTopBooks();\n    // після одержання даних викликаємо функцію, яка генерує html розмітка\n    const markup = categoriesMarkup(booksData);\n    list.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction categoriesMarkup(data) {\n    // Функція створює розмітку для одержаних категорій\n    // Далі для кожної категорії викликаємо функцію розмітки для книг (booksMarkup)\n    return data.map((res) => {\n        return singleCategoryMarkup(res.list_name, res.books, false)\n    });\n}\n\nfunction singleCategoryMarkup(categoryName, books, isSingleCategory) {\n    let markup = !isSingleCategory ? `<div class = \"books-list-name\" >${categoryName}</div>` : '';\n    markup +=  `<ul class=\"books-container ${isSingleCategory ? 'books-container-multi': ''}\">\n                    ${booksMarkup(books)}\n                </ul>`\n    const buttonMarkup = !isSingleCategory ? `<button class = \"books-btn\" type = \"button\" id=\"${categoryName}\"> SEE MORE </button>` : '';\n    markup += buttonMarkup\n    return markup;\n}\n\nfunction booksMarkup(books) {\n    // Функція створює розмітку для списку книг\n    return books.map((book) => {\n        return `<li>\n                <div data-book=${book._id} class=\"book-block\">\n                    <img src=\"${book.book_image}\" class=\"book-pic\" width=120 heigh=240 />\n                    <p class=\"book-name\">${book.title}</p>\n                    <p class=\"book-author\">${book.author}</p>\n                </div>\n         </li>`\n    }).join('');\n}\n\n// const httpRequest = new XMLHttpRequest();\n\n// function newList() {\n    \n    \n//     return `<div class = \"books-list-name\" ></div>\n//     <ul class=\"books-container\">\n//     </ul>`\n// }\n\n// Наступний код треба видалити:\n// 1. Він виконується тільки раз при завантаженні сторінки\n// 2. У нас на даний момент немає виділеної категорії, яку треба завантажити\n// 3. Ми використовуємо бібліотеку axios для http запитів\n/*\nhttpRequest.onreadystatechange = newList;\nhttpRequest.open(\"GET\", \"https://books-backend.p.goit.global/books/category?category=selectedCategory\", true);\nhttpRequest.setRequestHeader(\n    \"Content-Type\",\n    \"application/json\",\n  );\nhttpRequest.send();\n*/\n\n// Так само, категорії ще не завантажені на цей час.\n// Краще підписатися на клік батьківсьго елементу.\n/*\nconst categoryItems = document.querySelectorAll('.categ-item');\ncategoryItems.forEach(function(category) {\n    category.addEventListener(\"click\", function() {\n        const selectedCategory = categoryItems.value;\n        const url = \"https://books-backend.p.goit.global/books/category?category=\" + selectedCategory;\n        axios.get(url)\n            .then(response => {\n                console.log(response.data);\n            })\n            .catch(error => console.error(error));\n\n    })\n})*/\n\n// Обробник кліку на категорії - завантажуємо книги для категорії і виділяємо акитивну категорію\ncategoryList.addEventListener(\"click\", async (e) => {\n    e.preventDefault();\n    \n    if (e.target == categoryList) {\n        // Натиснули на список, а не на елемент (між елементами), ігноруємо\n        return;\n    }\n    const selectedCategory = e.target.innerHTML;\n    reloadBooksForCategory(selectedCategory);\n});\n\nasync function reloadBooksForCategory(selectedCategory) {\n    for (const child of categoryList.children)\n        if (child.innerHTML != selectedCategory)\n            child.classList.remove('is-active-item');\n        else\n            child.classList.add('is-active-item');\n    \n    let markup = null\n    if (selectedCategory == \"All categories\") {\n        populateCategoryHeader('Best Sellers Books');\n        const data = await getTopBooks();\n        markup = categoriesMarkup(data);\n    }\n    else {\n        populateCategoryHeader(selectedCategory);\n        const data = await getBooksByCategory(selectedCategory);  \n        markup = singleCategoryMarkup(selectedCategory, data, true);\n    }\n    list.innerHTML = markup;\n    window.scrollTo({ top: 0, behavior: \"smooth\"})\n}\n\nfunction populateCategoryHeader(categoryName) {\n    // Update categories header (h1) with selected category name\n    const words = categoryName.split(\" \")\n    booksCategoryName.innerHTML = `<span class=\"dark-text\">${words[0]}</span> ${words.slice(1).join(' ')}`;\n}\n\n// Це не працює - код виконується, коли кнопки ще не створені (або можуть бути перезавантажені)\n// Як варіант, можна підписатися на onclick до батьківського div, який завжди існує і далі визначить, коли клік приходить від кнопки\n// const buttonsForCateg = document.querySelectorAll(\".books-btn\");\n// console.log('Batoni', buttonsForCateg);\n// buttonsForCateg.forEach(function(button) {\n//     button.addEventListener(\"click\", function() {\n//         const showList = categoryItems.map(url)\n//     list.insertAdjacentHTML(\"beforeend\", showList)\n//     console.log(list)\n//     });\n// });\n\nlist.addEventListener('click', async (event) => {\n    // Тільки коли клікнули на кнопці, завантажуємо книги цієї категорії\n    if (event.target.classList.contains('books-btn')) {\n        console.log('here');\n        const selectedCategory = event.target.id;\n        reloadBooksForCategory(selectedCategory);\n    }\n})\n"],"names":["axios","getTopBooks","getBooksByCategory","category","authModal","openModalBtn","authFormClose","signupLink","signinLink","signupForm","submitButton","openAuthModal","event","updateButtonText","name","email","password","saveUserData","modal","userData","existingUsers","action","BASE_URL","endpointList","fetchCategories","response","categories","categoriesList","li","Notiflix","error","list","categoryList","booksCategoryName","loadOnStartup","booksData","markup","categoriesMarkup","data","res","singleCategoryMarkup","categoryName","books","isSingleCategory","booksMarkup","buttonMarkup","book","e","selectedCategory","reloadBooksForCategory","child","populateCategoryHeader","words"],"mappings":"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"}